apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: "androidx.navigation.safeargs.kotlin"

// Defining openid props from local.properties
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def myuw_base_url = properties.getProperty('myuw.base_url')
def myuw_eula_url = properties.getProperty('myuw.eula_url')
def myuw_privacy_url = properties.getProperty('myuw.privacy_url')
def myuw_tos_url = properties.getProperty('myuw.tos_url')

def openid_discovery_uri = properties.getProperty('openid.discovery_uri')
def openid_authorization_scope = properties.getProperty('openid.authorization_scope')
def openid_redirect_uri = properties.getProperty('openid.redirect_uri')
def openid_client_id = properties.getProperty('openid.client_id')

android {
    compileSdk 35
    defaultConfig {
        applicationId "edu.uw.myuw_android"
        minSdkVersion 28
        targetSdkVersion 34
        versionCode 9
        versionName "1.0.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "string", "myuw_base_url", "${myuw_base_url}"
        resValue "string", "myuw_affiliation_endpoint", "${myuw_base_url}${properties.getProperty('myuw.affiliation_endpoint')}"
        resValue "string", "myuw_eula_url", "${myuw_eula_url}"
        resValue "string", "myuw_privacy_url", "${myuw_privacy_url}"
        resValue "string", "myuw_tos_url", "${myuw_tos_url}"
        resValue "string", "openid_discovery_uri", "${openid_discovery_uri}"
        resValue "string", "openid_authorization_scope", "${openid_authorization_scope}"
        resValue "string", "openid_redirect_uri", "${openid_redirect_uri}"
        resValue "string", "openid_client_id", "${openid_client_id}"

        manifestPlaceholders = [
                redirect_scheme: "${openid_redirect_uri.split(':')[0]}"
        ]
    }
    buildTypes {
        debug {
            manifestPlaceholders += [usesCleartextTraffic: "true"]
        }
        release {
            manifestPlaceholders += [usesCleartextTraffic: "false"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    namespace 'edu.my.myuw_android'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.7.1'
    //noinspection GradleDependency - 1.15.0 not working with current codebase
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'com.google.android.material:material:1.13.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    //noinspection GradleDependency - 2.8.0 not working with current codebase
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
    //noinspection GradleDependency - 2.8.0 not working with current codebase
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    //noinspection GradleDependency - 2.8.0 not working with current codebase
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'net.openid:appauth:0.11.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
}
